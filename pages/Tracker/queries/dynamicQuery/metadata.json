{
  "gitSyncId": "67854afe8f01ef5977743d0e_32c4d232-01ce-4f72-83ef-1d54b4eafa89",
  "id": "Tracker_dynamicQuery",
  "pluginId": "postgres-plugin",
  "pluginType": "DB",
  "unpublishedAction": {
    "actionConfiguration": {
      "body": "WITH hunts AS (\n    SELECT \n        no.id,\n        no.phone, \n\t\tm.name as merchant_name,\n        m.id AS merchant_id,\n\t\tno.business_name,\n\t\tno.business_owner_name,\n        mu.name AS merchant_user_name, \n        no.onboard_type, \n        no.business_team_user_id, \n        m.first_order_date, \n        m.active_payment_method,\n        account_status,\n        COUNT(s.id) AS store_count\n    FROM new_onboards no\n    LEFT JOIN remote_hermes.merchants m ON m.phone = no.phone\n    LEFT JOIN remote_hermes.stores s ON s.merchant_id = m.id\n    LEFT JOIN remote_hermes.merchant_users mu ON mu.merchant_id = m.id\n    GROUP BY \n        1,2,3,4,5,6,7,8,9,10,11,12\n),\n\ntracker as (SELECT \n    h.*, \n    m.id AS final_merchant_id,\n    CASE \n        -- If merchant_id exists from the CTE, it's already known\n        WHEN h.merchant_id IS NOT NULL THEN h.account_status\n\n\t\twhen m.id is null then 'Registration Pending'\n\n        -- Specific case: Info Pending\n        WHEN m.id IS not NULL \n             AND (h.active_payment_method IS NULL OR h.store_count = 0)\n             AND h.first_order_date IS NULL \n        THEN 'Info Pending'\n\n        -- Specific case: First Order Pending\n        WHEN m.id IS not NULL \n             AND h.active_payment_method IS NOT NULL \n             AND h.store_count <> 0 \n             AND h.first_order_date IS NULL \n        THEN 'First Order Pending'\n\n        -- General: Registration Pending\n        -- Catch-all\n        ELSE 'Incubation'\n    END AS final_status\nFROM hunts h\nLEFT JOIN remote_hermes.merchants m ON h.phone = m.phone)\n\n\nselect * from tracker\nwhere final_status = '{{this.params.status}}'\nAND business_team_user_id = '{{this.params.user_id.toString()}}';\n\n",
      "encodeParamsToggle": true,
      "paginationType": "NONE",
      "pluginSpecifiedTemplates": [
        {
          "value": true
        }
      ],
      "timeoutInMillisecond": 100000000
    },
    "confirmBeforeExecute": false,
    "datasource": {
      "id": "hermes-write-db-prod",
      "isAutoGenerated": false,
      "name": "hermes-write-db-prod",
      "pluginId": "postgres-plugin"
    },
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "executeOnLoad": false,
    "name": "dynamicQuery",
    "pageId": "Tracker",
    "userSetOnLoad": false
  }
}