{
  "gitSyncId": "67854afe8f01ef5977743d0e_32c4d232-01ce-4f72-83ef-1d54b4eafa89",
  "id": "Tracker_dynamicQuery",
  "pluginId": "postgres-plugin",
  "pluginType": "DB",
  "unpublishedAction": {
    "actionConfiguration": {
      "body": "WITH orders AS ( \n\tSELECT \n\tmerchant_id, \n\tMIN(sorted_at) AS first_order_date, \n\tCOUNT(CASE WHEN sorted_at >= CURRENT_DATE - 1 THEN consignment_id END) AS last_day_order, \n\tCOUNT(consignment_id) AS order_count\n\tFROM remote_hermes.orders\n\tWHERE created_at >= '2025-01-10'\n\tGROUP BY merchant_id\n),\n\nmerchants AS ( \n\tSELECT *\n\tFROM remote_hermes.merchants\n),\nstores AS ( \n\tSELECT merchant_id, COUNT(id) AS store_count\n\tFROM remote_hermes.stores\n\tGROUP BY 1\n),\ndefining_status AS (\n\tSELECT \n\tno.id,\n\tbusiness_name,\n\tbusiness_owner_name,\n\testimated_volume,\n\tro.first_order_date,\n\tro.last_day_order,\n\tst.name AS product_category_name,\n\tno.phone,\n\twebsite,\n\trm.id as merchant_id,\n\tno.created_at,\n\tno.updated_at,\n\tstt.name AS competitor_name,\n\tbtu.user_name AS business_team_user_name,\n\tstatus,\n\tCASE \n\tWHEN rm.phone IS NOT NULL THEN TRUE \n\tELSE FALSE \n\tEND AS is_registered_merchant,\n\tCASE \n\tWHEN rs.store_count > 0 THEN TRUE \n\tELSE FALSE \n\tEND AS is_store_created,\n\tCASE \n\tWHEN rm.active_payment_method IS NOT NULL THEN TRUE \n\tELSE FALSE \n\tEND AS is_payment_method_active,\n\tCASE \n\tWHEN ro.order_count > 0 THEN TRUE \n\tELSE FALSE \n\tEND AS is_order_created\n\tFROM \n\tnew_onboards no\n\tLEFT JOIN merchants rm ON no.phone = rm.phone\n\tLEFT JOIN stores rs ON rs.merchant_id = rm.id\n\tLEFT JOIN orders ro ON ro.merchant_id = rm.id \n\tLEFT JOIN static_values st ON st.id = CAST(NULLIF(no.product_category_id, '') AS INT)\n\tLEFT JOIN static_values stt ON stt.id = CAST(NULLIF(no.product_category_id, '') AS INT)\n\tLEFT JOIN business_team_users btu ON btu.id = CAST(NULLIF(no.business_team_user_id, '') AS INT)\n\tWHERE btu.id = '{{this.params.user_id}}'\n\tand no.status in ('Active')\n),\ncurrent_status AS (\n\tSELECT *, \n\tCASE\n\t-- Check if the merchant is ongoing\n\tWHEN is_registered_merchant = TRUE AND is_store_created = TRUE AND is_payment_method_active = TRUE AND is_order_created = TRUE THEN \n\tCASE \n\t-- If ongoing and needs followup (estimated_volume > last_day_order)\n\tWHEN estimated_volume > last_day_order THEN 'need_followup'\n\tELSE 'ongoing_merchant'\n\tEND\n\n\t-- Other conditions for the status\n\tWHEN is_registered_merchant = FALSE AND is_store_created = FALSE AND is_payment_method_active = FALSE AND is_order_created = FALSE THEN 'registration_pending'\n\tWHEN is_registered_merchant = TRUE AND is_store_created = FALSE AND is_payment_method_active = FALSE AND is_order_created = FALSE THEN 'registered'\n\tWHEN is_registered_merchant = TRUE AND (is_store_created = FALSE OR is_payment_method_active=FALSE) AND is_order_created = FALSE THEN 'info_pending'\n\tWHEN is_registered_merchant = TRUE AND is_store_created = TRUE AND is_payment_method_active=TRUE AND is_order_created = FALSE THEN 'info_uploaded_order_pending'\n\tELSE 'none'\n\tEND AS current_status\n\tFROM defining_status\n)\nSELECT \n\t\t\tid,\n    Phone,\n\t\t\tmerchant_id,\n    business_name, \n    business_owner_name, \n    product_category_name,\n    created_at,\n\t\tstatus\nFROM current_status\nWHERE current_status = '{{this.params.status}}';\n\n",
      "encodeParamsToggle": true,
      "paginationType": "NONE",
      "pluginSpecifiedTemplates": [
        {
          "value": true
        }
      ],
      "timeoutInMillisecond": 100000000
    },
    "confirmBeforeExecute": false,
    "datasource": {
      "id": "hermes-write-db-prod",
      "isAutoGenerated": false,
      "name": "hermes-write-db-prod",
      "pluginId": "postgres-plugin"
    },
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "executeOnLoad": false,
    "name": "dynamicQuery",
    "pageId": "Tracker",
    "userSetOnLoad": false
  }
}